/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef WFS_TYPES_H
#define WFS_TYPES_H

/* base includes */
#include <glib-object.h>
#include <thrift/c_glib/thrift_struct.h>
#include <thrift/c_glib/protocol/thrift_protocol.h>

/* custom thrift includes */

/* begin types */

/* struct WfsAck */
struct _WfsAck
{ 
  ThriftStruct parent; 

  /* public */
  gint32 status;
  gboolean __isset_status;
};
typedef struct _WfsAck WfsAck;

struct _WfsAckClass
{
  ThriftStructClass parent;
};
typedef struct _WfsAckClass WfsAckClass;

GType wfs_ack_get_type (void);
#define TYPE_WFS_ACK (wfs_ack_get_type())
#define WFS_ACK(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_WFS_ACK, WfsAck))
#define WFS_ACK_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_WFS_ACK, WfsAckClass))
#define IS_WFS_ACK(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_WFS_ACK))
#define IS_WFS_ACK_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_WFS_ACK))
#define WFS_ACK_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_WFS_ACK, WfsAckClass))

/* struct Wfs */
struct _Wfs
{ 
  ThriftStruct parent; 

  /* public */
  gint32 status;
  gboolean __isset_status;
};
typedef struct _Wfs Wfs;

struct _WfsClass
{
  ThriftStructClass parent;
};
typedef struct _WfsClass WfsClass;

GType wfs_get_type (void);
#define TYPE_WFS (wfs_get_type())
#define WFS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_WFS, Wfs))
#define WFS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_WFS, WfsClass))
#define IS_WFS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_WFS))
#define IS_WFS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_WFS))
#define WFS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_WFS, WfsClass))

/* struct WfsFile */
struct _WfsFile
{ 
  ThriftStruct parent; 

  /* public */
  gchar * name;
  gboolean __isset_name;
  GByteArray * fileBody;
  gboolean __isset_fileBody;
  gchar * fileType;
  gboolean __isset_fileType;
};
typedef struct _WfsFile WfsFile;

struct _WfsFileClass
{
  ThriftStructClass parent;
};
typedef struct _WfsFileClass WfsFileClass;

GType wfs_file_get_type (void);
#define TYPE_WFS_FILE (wfs_file_get_type())
#define WFS_FILE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_WFS_FILE, WfsFile))
#define WFS_FILE_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_WFS_FILE, WfsFileClass))
#define IS_WFS_FILE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_WFS_FILE))
#define IS_WFS_FILE_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_WFS_FILE))
#define WFS_FILE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_WFS_FILE, WfsFileClass))

/* constants */
#define WFSPROTOCOLVERSION 1
#define WFSPROTOCOLVERSIONNAME g_strdup ("0.0.1")

/* struct IWfsWfsPostArgs */
struct _IWfsWfsPostArgs
{ 
  ThriftStruct parent; 

  /* public */
  WfsFile * wf;
  gboolean __isset_wf;
};
typedef struct _IWfsWfsPostArgs IWfsWfsPostArgs;

struct _IWfsWfsPostArgsClass
{
  ThriftStructClass parent;
};
typedef struct _IWfsWfsPostArgsClass IWfsWfsPostArgsClass;

GType i_wfs_wfs_post_args_get_type (void);
#define TYPE_I_WFS_WFS_POST_ARGS (i_wfs_wfs_post_args_get_type())
#define I_WFS_WFS_POST_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_I_WFS_WFS_POST_ARGS, IWfsWfsPostArgs))
#define I_WFS_WFS_POST_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_I_WFS_WFS_POST_ARGS, IWfsWfsPostArgsClass))
#define IS_I_WFS_WFS_POST_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_I_WFS_WFS_POST_ARGS))
#define IS_I_WFS_WFS_POST_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_I_WFS_WFS_POST_ARGS))
#define I_WFS_WFS_POST_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_I_WFS_WFS_POST_ARGS, IWfsWfsPostArgsClass))

/* struct IWfsWfsPostResult */
struct _IWfsWfsPostResult
{ 
  ThriftStruct parent; 

  /* public */
  WfsAck * success;
  gboolean __isset_success;
};
typedef struct _IWfsWfsPostResult IWfsWfsPostResult;

struct _IWfsWfsPostResultClass
{
  ThriftStructClass parent;
};
typedef struct _IWfsWfsPostResultClass IWfsWfsPostResultClass;

GType i_wfs_wfs_post_result_get_type (void);
#define TYPE_I_WFS_WFS_POST_RESULT (i_wfs_wfs_post_result_get_type())
#define I_WFS_WFS_POST_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_I_WFS_WFS_POST_RESULT, IWfsWfsPostResult))
#define I_WFS_WFS_POST_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_I_WFS_WFS_POST_RESULT, IWfsWfsPostResultClass))
#define IS_I_WFS_WFS_POST_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_I_WFS_WFS_POST_RESULT))
#define IS_I_WFS_WFS_POST_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_I_WFS_WFS_POST_RESULT))
#define I_WFS_WFS_POST_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_I_WFS_WFS_POST_RESULT, IWfsWfsPostResultClass))

/* struct IWfsWfsReadArgs */
struct _IWfsWfsReadArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * name;
  gboolean __isset_name;
};
typedef struct _IWfsWfsReadArgs IWfsWfsReadArgs;

struct _IWfsWfsReadArgsClass
{
  ThriftStructClass parent;
};
typedef struct _IWfsWfsReadArgsClass IWfsWfsReadArgsClass;

GType i_wfs_wfs_read_args_get_type (void);
#define TYPE_I_WFS_WFS_READ_ARGS (i_wfs_wfs_read_args_get_type())
#define I_WFS_WFS_READ_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_I_WFS_WFS_READ_ARGS, IWfsWfsReadArgs))
#define I_WFS_WFS_READ_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_I_WFS_WFS_READ_ARGS, IWfsWfsReadArgsClass))
#define IS_I_WFS_WFS_READ_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_I_WFS_WFS_READ_ARGS))
#define IS_I_WFS_WFS_READ_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_I_WFS_WFS_READ_ARGS))
#define I_WFS_WFS_READ_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_I_WFS_WFS_READ_ARGS, IWfsWfsReadArgsClass))

/* struct IWfsWfsReadResult */
struct _IWfsWfsReadResult
{ 
  ThriftStruct parent; 

  /* public */
  WfsFile * success;
  gboolean __isset_success;
};
typedef struct _IWfsWfsReadResult IWfsWfsReadResult;

struct _IWfsWfsReadResultClass
{
  ThriftStructClass parent;
};
typedef struct _IWfsWfsReadResultClass IWfsWfsReadResultClass;

GType i_wfs_wfs_read_result_get_type (void);
#define TYPE_I_WFS_WFS_READ_RESULT (i_wfs_wfs_read_result_get_type())
#define I_WFS_WFS_READ_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_I_WFS_WFS_READ_RESULT, IWfsWfsReadResult))
#define I_WFS_WFS_READ_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_I_WFS_WFS_READ_RESULT, IWfsWfsReadResultClass))
#define IS_I_WFS_WFS_READ_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_I_WFS_WFS_READ_RESULT))
#define IS_I_WFS_WFS_READ_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_I_WFS_WFS_READ_RESULT))
#define I_WFS_WFS_READ_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_I_WFS_WFS_READ_RESULT, IWfsWfsReadResultClass))

/* struct IWfsWfsDelArgs */
struct _IWfsWfsDelArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * name;
  gboolean __isset_name;
};
typedef struct _IWfsWfsDelArgs IWfsWfsDelArgs;

struct _IWfsWfsDelArgsClass
{
  ThriftStructClass parent;
};
typedef struct _IWfsWfsDelArgsClass IWfsWfsDelArgsClass;

GType i_wfs_wfs_del_args_get_type (void);
#define TYPE_I_WFS_WFS_DEL_ARGS (i_wfs_wfs_del_args_get_type())
#define I_WFS_WFS_DEL_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_I_WFS_WFS_DEL_ARGS, IWfsWfsDelArgs))
#define I_WFS_WFS_DEL_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_I_WFS_WFS_DEL_ARGS, IWfsWfsDelArgsClass))
#define IS_I_WFS_WFS_DEL_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_I_WFS_WFS_DEL_ARGS))
#define IS_I_WFS_WFS_DEL_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_I_WFS_WFS_DEL_ARGS))
#define I_WFS_WFS_DEL_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_I_WFS_WFS_DEL_ARGS, IWfsWfsDelArgsClass))

/* struct IWfsWfsDelResult */
struct _IWfsWfsDelResult
{ 
  ThriftStruct parent; 

  /* public */
  WfsAck * success;
  gboolean __isset_success;
};
typedef struct _IWfsWfsDelResult IWfsWfsDelResult;

struct _IWfsWfsDelResultClass
{
  ThriftStructClass parent;
};
typedef struct _IWfsWfsDelResultClass IWfsWfsDelResultClass;

GType i_wfs_wfs_del_result_get_type (void);
#define TYPE_I_WFS_WFS_DEL_RESULT (i_wfs_wfs_del_result_get_type())
#define I_WFS_WFS_DEL_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_I_WFS_WFS_DEL_RESULT, IWfsWfsDelResult))
#define I_WFS_WFS_DEL_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_I_WFS_WFS_DEL_RESULT, IWfsWfsDelResultClass))
#define IS_I_WFS_WFS_DEL_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_I_WFS_WFS_DEL_RESULT))
#define IS_I_WFS_WFS_DEL_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_I_WFS_WFS_DEL_RESULT))
#define I_WFS_WFS_DEL_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_I_WFS_WFS_DEL_RESULT, IWfsWfsDelResultClass))

#endif /* WFS_TYPES_H */
