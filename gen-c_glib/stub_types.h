/**
 * Autogenerated by Thrift Compiler (0.21.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef STUB_TYPES_H
#define STUB_TYPES_H

/* base includes */
#include <glib-object.h>
#include <thrift/c_glib/thrift_struct.h>
#include <thrift/c_glib/protocol/thrift_protocol.h>
/* custom thrift includes */

/* begin types */

/* struct WfsError */
struct _WfsError
{ 
  ThriftStruct parent; 

  /* public */
  gint32 code;
  gboolean __isset_code;
  gchar * info;
  gboolean __isset_info;
};
typedef struct _WfsError WfsError;

struct _WfsErrorClass
{
  ThriftStructClass parent;
};
typedef struct _WfsErrorClass WfsErrorClass;

GType wfs_error_get_type (void);
#define TYPE_WFS_ERROR (wfs_error_get_type())
#define WFS_ERROR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_WFS_ERROR, WfsError))
#define WFS_ERROR_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_WFS_ERROR, WfsErrorClass))
#define IS_WFS_ERROR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_WFS_ERROR))
#define IS_WFS_ERROR_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_WFS_ERROR))
#define WFS_ERROR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_WFS_ERROR, WfsErrorClass))

/* struct WfsAck */
struct _WfsAck
{ 
  ThriftStruct parent; 

  /* public */
  gboolean ok;
  WfsError * error;
  gboolean __isset_error;
};
typedef struct _WfsAck WfsAck;

struct _WfsAckClass
{
  ThriftStructClass parent;
};
typedef struct _WfsAckClass WfsAckClass;

GType wfs_ack_get_type (void);
#define TYPE_WFS_ACK (wfs_ack_get_type())
#define WFS_ACK(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_WFS_ACK, WfsAck))
#define WFS_ACK_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_WFS_ACK, WfsAckClass))
#define IS_WFS_ACK(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_WFS_ACK))
#define IS_WFS_ACK_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_WFS_ACK))
#define WFS_ACK_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_WFS_ACK, WfsAckClass))

/* struct WfsReq */
struct _WfsReq
{ 
  ThriftStruct parent; 

  /* public */
  gchar * path;
  gboolean __isset_path;
};
typedef struct _WfsReq WfsReq;

struct _WfsReqClass
{
  ThriftStructClass parent;
};
typedef struct _WfsReqClass WfsReqClass;

GType wfs_req_get_type (void);
#define TYPE_WFS_REQ (wfs_req_get_type())
#define WFS_REQ(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_WFS_REQ, WfsReq))
#define WFS_REQ_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_WFS_REQ, WfsReqClass))
#define IS_WFS_REQ(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_WFS_REQ))
#define IS_WFS_REQ_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_WFS_REQ))
#define WFS_REQ_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_WFS_REQ, WfsReqClass))

/* struct WfsAuth */
struct _WfsAuth
{ 
  ThriftStruct parent; 

  /* public */
  gchar * name;
  gboolean __isset_name;
  gchar * pwd;
  gboolean __isset_pwd;
};
typedef struct _WfsAuth WfsAuth;

struct _WfsAuthClass
{
  ThriftStructClass parent;
};
typedef struct _WfsAuthClass WfsAuthClass;

GType wfs_auth_get_type (void);
#define TYPE_WFS_AUTH (wfs_auth_get_type())
#define WFS_AUTH(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_WFS_AUTH, WfsAuth))
#define WFS_AUTH_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_WFS_AUTH, WfsAuthClass))
#define IS_WFS_AUTH(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_WFS_AUTH))
#define IS_WFS_AUTH_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_WFS_AUTH))
#define WFS_AUTH_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_WFS_AUTH, WfsAuthClass))

/* struct WfsData */
struct _WfsData
{ 
  ThriftStruct parent; 

  /* public */
  GByteArray * data;
  gboolean __isset_data;
};
typedef struct _WfsData WfsData;

struct _WfsDataClass
{
  ThriftStructClass parent;
};
typedef struct _WfsDataClass WfsDataClass;

GType wfs_data_get_type (void);
#define TYPE_WFS_DATA (wfs_data_get_type())
#define WFS_DATA(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_WFS_DATA, WfsData))
#define WFS_DATA_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_WFS_DATA, WfsDataClass))
#define IS_WFS_DATA(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_WFS_DATA))
#define IS_WFS_DATA_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_WFS_DATA))
#define WFS_DATA_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_WFS_DATA, WfsDataClass))

/* struct WfsFile */
struct _WfsFile
{ 
  ThriftStruct parent; 

  /* public */
  GByteArray * data;
  gchar * name;
  gint8 compress;
  gboolean __isset_compress;
};
typedef struct _WfsFile WfsFile;

struct _WfsFileClass
{
  ThriftStructClass parent;
};
typedef struct _WfsFileClass WfsFileClass;

GType wfs_file_get_type (void);
#define TYPE_WFS_FILE (wfs_file_get_type())
#define WFS_FILE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_WFS_FILE, WfsFile))
#define WFS_FILE_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_WFS_FILE, WfsFileClass))
#define IS_WFS_FILE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_WFS_FILE))
#define IS_WFS_FILE_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_WFS_FILE))
#define WFS_FILE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_WFS_FILE, WfsFileClass))

/* constants */

/* struct WfsIfaceAppendArgs */
struct _WfsIfaceAppendArgs
{ 
  ThriftStruct parent; 

  /* public */
  WfsFile * file;
  gboolean __isset_file;
};
typedef struct _WfsIfaceAppendArgs WfsIfaceAppendArgs;

struct _WfsIfaceAppendArgsClass
{
  ThriftStructClass parent;
};
typedef struct _WfsIfaceAppendArgsClass WfsIfaceAppendArgsClass;

GType wfs_iface_append_args_get_type (void);
#define TYPE_WFS_IFACE_APPEND_ARGS (wfs_iface_append_args_get_type())
#define WFS_IFACE_APPEND_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_WFS_IFACE_APPEND_ARGS, WfsIfaceAppendArgs))
#define WFS_IFACE_APPEND_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_WFS_IFACE_APPEND_ARGS, WfsIfaceAppendArgsClass))
#define IS_WFS_IFACE_APPEND_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_WFS_IFACE_APPEND_ARGS))
#define IS_WFS_IFACE_APPEND_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_WFS_IFACE_APPEND_ARGS))
#define WFS_IFACE_APPEND_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_WFS_IFACE_APPEND_ARGS, WfsIfaceAppendArgsClass))

/* struct WfsIfaceAppendResult */
struct _WfsIfaceAppendResult
{ 
  ThriftStruct parent; 

  /* public */
  WfsAck * success;
  gboolean __isset_success;
};
typedef struct _WfsIfaceAppendResult WfsIfaceAppendResult;

struct _WfsIfaceAppendResultClass
{
  ThriftStructClass parent;
};
typedef struct _WfsIfaceAppendResultClass WfsIfaceAppendResultClass;

GType wfs_iface_append_result_get_type (void);
#define TYPE_WFS_IFACE_APPEND_RESULT (wfs_iface_append_result_get_type())
#define WFS_IFACE_APPEND_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_WFS_IFACE_APPEND_RESULT, WfsIfaceAppendResult))
#define WFS_IFACE_APPEND_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_WFS_IFACE_APPEND_RESULT, WfsIfaceAppendResultClass))
#define IS_WFS_IFACE_APPEND_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_WFS_IFACE_APPEND_RESULT))
#define IS_WFS_IFACE_APPEND_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_WFS_IFACE_APPEND_RESULT))
#define WFS_IFACE_APPEND_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_WFS_IFACE_APPEND_RESULT, WfsIfaceAppendResultClass))

/* struct WfsIfaceDeleteArgs */
struct _WfsIfaceDeleteArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * path;
  gboolean __isset_path;
};
typedef struct _WfsIfaceDeleteArgs WfsIfaceDeleteArgs;

struct _WfsIfaceDeleteArgsClass
{
  ThriftStructClass parent;
};
typedef struct _WfsIfaceDeleteArgsClass WfsIfaceDeleteArgsClass;

GType wfs_iface_delete_args_get_type (void);
#define TYPE_WFS_IFACE_DELETE_ARGS (wfs_iface_delete_args_get_type())
#define WFS_IFACE_DELETE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_WFS_IFACE_DELETE_ARGS, WfsIfaceDeleteArgs))
#define WFS_IFACE_DELETE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_WFS_IFACE_DELETE_ARGS, WfsIfaceDeleteArgsClass))
#define IS_WFS_IFACE_DELETE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_WFS_IFACE_DELETE_ARGS))
#define IS_WFS_IFACE_DELETE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_WFS_IFACE_DELETE_ARGS))
#define WFS_IFACE_DELETE_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_WFS_IFACE_DELETE_ARGS, WfsIfaceDeleteArgsClass))

/* struct WfsIfaceDeleteResult */
struct _WfsIfaceDeleteResult
{ 
  ThriftStruct parent; 

  /* public */
  WfsAck * success;
  gboolean __isset_success;
};
typedef struct _WfsIfaceDeleteResult WfsIfaceDeleteResult;

struct _WfsIfaceDeleteResultClass
{
  ThriftStructClass parent;
};
typedef struct _WfsIfaceDeleteResultClass WfsIfaceDeleteResultClass;

GType wfs_iface_delete_result_get_type (void);
#define TYPE_WFS_IFACE_DELETE_RESULT (wfs_iface_delete_result_get_type())
#define WFS_IFACE_DELETE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_WFS_IFACE_DELETE_RESULT, WfsIfaceDeleteResult))
#define WFS_IFACE_DELETE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_WFS_IFACE_DELETE_RESULT, WfsIfaceDeleteResultClass))
#define IS_WFS_IFACE_DELETE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_WFS_IFACE_DELETE_RESULT))
#define IS_WFS_IFACE_DELETE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_WFS_IFACE_DELETE_RESULT))
#define WFS_IFACE_DELETE_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_WFS_IFACE_DELETE_RESULT, WfsIfaceDeleteResultClass))

/* struct WfsIfaceRenameArgs */
struct _WfsIfaceRenameArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * path;
  gboolean __isset_path;
  gchar * newpath;
  gboolean __isset_newpath;
};
typedef struct _WfsIfaceRenameArgs WfsIfaceRenameArgs;

struct _WfsIfaceRenameArgsClass
{
  ThriftStructClass parent;
};
typedef struct _WfsIfaceRenameArgsClass WfsIfaceRenameArgsClass;

GType wfs_iface_rename_args_get_type (void);
#define TYPE_WFS_IFACE_RENAME_ARGS (wfs_iface_rename_args_get_type())
#define WFS_IFACE_RENAME_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_WFS_IFACE_RENAME_ARGS, WfsIfaceRenameArgs))
#define WFS_IFACE_RENAME_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_WFS_IFACE_RENAME_ARGS, WfsIfaceRenameArgsClass))
#define IS_WFS_IFACE_RENAME_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_WFS_IFACE_RENAME_ARGS))
#define IS_WFS_IFACE_RENAME_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_WFS_IFACE_RENAME_ARGS))
#define WFS_IFACE_RENAME_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_WFS_IFACE_RENAME_ARGS, WfsIfaceRenameArgsClass))

/* struct WfsIfaceRenameResult */
struct _WfsIfaceRenameResult
{ 
  ThriftStruct parent; 

  /* public */
  WfsAck * success;
  gboolean __isset_success;
};
typedef struct _WfsIfaceRenameResult WfsIfaceRenameResult;

struct _WfsIfaceRenameResultClass
{
  ThriftStructClass parent;
};
typedef struct _WfsIfaceRenameResultClass WfsIfaceRenameResultClass;

GType wfs_iface_rename_result_get_type (void);
#define TYPE_WFS_IFACE_RENAME_RESULT (wfs_iface_rename_result_get_type())
#define WFS_IFACE_RENAME_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_WFS_IFACE_RENAME_RESULT, WfsIfaceRenameResult))
#define WFS_IFACE_RENAME_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_WFS_IFACE_RENAME_RESULT, WfsIfaceRenameResultClass))
#define IS_WFS_IFACE_RENAME_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_WFS_IFACE_RENAME_RESULT))
#define IS_WFS_IFACE_RENAME_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_WFS_IFACE_RENAME_RESULT))
#define WFS_IFACE_RENAME_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_WFS_IFACE_RENAME_RESULT, WfsIfaceRenameResultClass))

/* struct WfsIfaceAuthArgs */
struct _WfsIfaceAuthArgs
{ 
  ThriftStruct parent; 

  /* public */
  WfsAuth * wa;
  gboolean __isset_wa;
};
typedef struct _WfsIfaceAuthArgs WfsIfaceAuthArgs;

struct _WfsIfaceAuthArgsClass
{
  ThriftStructClass parent;
};
typedef struct _WfsIfaceAuthArgsClass WfsIfaceAuthArgsClass;

GType wfs_iface_auth_args_get_type (void);
#define TYPE_WFS_IFACE_AUTH_ARGS (wfs_iface_auth_args_get_type())
#define WFS_IFACE_AUTH_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_WFS_IFACE_AUTH_ARGS, WfsIfaceAuthArgs))
#define WFS_IFACE_AUTH_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_WFS_IFACE_AUTH_ARGS, WfsIfaceAuthArgsClass))
#define IS_WFS_IFACE_AUTH_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_WFS_IFACE_AUTH_ARGS))
#define IS_WFS_IFACE_AUTH_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_WFS_IFACE_AUTH_ARGS))
#define WFS_IFACE_AUTH_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_WFS_IFACE_AUTH_ARGS, WfsIfaceAuthArgsClass))

/* struct WfsIfaceAuthResult */
struct _WfsIfaceAuthResult
{ 
  ThriftStruct parent; 

  /* public */
  WfsAck * success;
  gboolean __isset_success;
};
typedef struct _WfsIfaceAuthResult WfsIfaceAuthResult;

struct _WfsIfaceAuthResultClass
{
  ThriftStructClass parent;
};
typedef struct _WfsIfaceAuthResultClass WfsIfaceAuthResultClass;

GType wfs_iface_auth_result_get_type (void);
#define TYPE_WFS_IFACE_AUTH_RESULT (wfs_iface_auth_result_get_type())
#define WFS_IFACE_AUTH_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_WFS_IFACE_AUTH_RESULT, WfsIfaceAuthResult))
#define WFS_IFACE_AUTH_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_WFS_IFACE_AUTH_RESULT, WfsIfaceAuthResultClass))
#define IS_WFS_IFACE_AUTH_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_WFS_IFACE_AUTH_RESULT))
#define IS_WFS_IFACE_AUTH_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_WFS_IFACE_AUTH_RESULT))
#define WFS_IFACE_AUTH_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_WFS_IFACE_AUTH_RESULT, WfsIfaceAuthResultClass))

/* struct WfsIfaceGetArgs */
struct _WfsIfaceGetArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * path;
  gboolean __isset_path;
};
typedef struct _WfsIfaceGetArgs WfsIfaceGetArgs;

struct _WfsIfaceGetArgsClass
{
  ThriftStructClass parent;
};
typedef struct _WfsIfaceGetArgsClass WfsIfaceGetArgsClass;

GType wfs_iface_get_args_get_type (void);
#define TYPE_WFS_IFACE_GET_ARGS (wfs_iface_get_args_get_type())
#define WFS_IFACE_GET_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_WFS_IFACE_GET_ARGS, WfsIfaceGetArgs))
#define WFS_IFACE_GET_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_WFS_IFACE_GET_ARGS, WfsIfaceGetArgsClass))
#define IS_WFS_IFACE_GET_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_WFS_IFACE_GET_ARGS))
#define IS_WFS_IFACE_GET_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_WFS_IFACE_GET_ARGS))
#define WFS_IFACE_GET_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_WFS_IFACE_GET_ARGS, WfsIfaceGetArgsClass))

/* struct WfsIfaceGetResult */
struct _WfsIfaceGetResult
{ 
  ThriftStruct parent; 

  /* public */
  WfsData * success;
  gboolean __isset_success;
};
typedef struct _WfsIfaceGetResult WfsIfaceGetResult;

struct _WfsIfaceGetResultClass
{
  ThriftStructClass parent;
};
typedef struct _WfsIfaceGetResultClass WfsIfaceGetResultClass;

GType wfs_iface_get_result_get_type (void);
#define TYPE_WFS_IFACE_GET_RESULT (wfs_iface_get_result_get_type())
#define WFS_IFACE_GET_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_WFS_IFACE_GET_RESULT, WfsIfaceGetResult))
#define WFS_IFACE_GET_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_WFS_IFACE_GET_RESULT, WfsIfaceGetResultClass))
#define IS_WFS_IFACE_GET_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_WFS_IFACE_GET_RESULT))
#define IS_WFS_IFACE_GET_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_WFS_IFACE_GET_RESULT))
#define WFS_IFACE_GET_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_WFS_IFACE_GET_RESULT, WfsIfaceGetResultClass))

/* struct WfsIfacePingArgs */
struct _WfsIfacePingArgs
{ 
  ThriftStruct parent; 

  /* public */
};
typedef struct _WfsIfacePingArgs WfsIfacePingArgs;

struct _WfsIfacePingArgsClass
{
  ThriftStructClass parent;
};
typedef struct _WfsIfacePingArgsClass WfsIfacePingArgsClass;

GType wfs_iface_ping_args_get_type (void);
#define TYPE_WFS_IFACE_PING_ARGS (wfs_iface_ping_args_get_type())
#define WFS_IFACE_PING_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_WFS_IFACE_PING_ARGS, WfsIfacePingArgs))
#define WFS_IFACE_PING_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_WFS_IFACE_PING_ARGS, WfsIfacePingArgsClass))
#define IS_WFS_IFACE_PING_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_WFS_IFACE_PING_ARGS))
#define IS_WFS_IFACE_PING_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_WFS_IFACE_PING_ARGS))
#define WFS_IFACE_PING_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_WFS_IFACE_PING_ARGS, WfsIfacePingArgsClass))

/* struct WfsIfacePingResult */
struct _WfsIfacePingResult
{ 
  ThriftStruct parent; 

  /* public */
  gint8 success;
  gboolean __isset_success;
};
typedef struct _WfsIfacePingResult WfsIfacePingResult;

struct _WfsIfacePingResultClass
{
  ThriftStructClass parent;
};
typedef struct _WfsIfacePingResultClass WfsIfacePingResultClass;

GType wfs_iface_ping_result_get_type (void);
#define TYPE_WFS_IFACE_PING_RESULT (wfs_iface_ping_result_get_type())
#define WFS_IFACE_PING_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_WFS_IFACE_PING_RESULT, WfsIfacePingResult))
#define WFS_IFACE_PING_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_WFS_IFACE_PING_RESULT, WfsIfacePingResultClass))
#define IS_WFS_IFACE_PING_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_WFS_IFACE_PING_RESULT))
#define IS_WFS_IFACE_PING_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_WFS_IFACE_PING_RESULT))
#define WFS_IFACE_PING_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_WFS_IFACE_PING_RESULT, WfsIfacePingResultClass))

#endif /* STUB_TYPES_H */
